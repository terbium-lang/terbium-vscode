{
  "name": "Terbium",
  "scopeName": "source.terbium",
  "fileTypes": [
    "tb",
    "trb",
    "terbium"
  ],
  "foldingStartMarker": "\\{\\s*$",
  "foldingStopMarker": "^\\s*\\}",
  "patterns": [
    {
      "include": "#comment"
    },
    {
      "include": "#func_def"
    },
    {
      "include": "#atom"
    }
  ],
  "repository": {
    "block_doc_comment": {
      "comment": "Block documentation comment",
      "name": "comment.block.documentation.terbium",
      "begin": "/\\*[\\*!](?![\\*/])",
      "end": "\\*/",
      "patterns": [
        {
          "include": "#block_doc_comment"
        },
        {
          "include": "#block_comment"
        }
      ]
    },
    "block_comment": {
      "comment": "Block comment",
      "name": "comment.block.terbium",
      "begin": "/\\*",
      "end": "\\*/",
      "patterns": [
        {
          "include": "#block_doc_comment"
        },
        {
          "include": "#block_comment"
        }
      ]
    },
    "line_doc_comment": {
      "comment": "Single-line documentation comment",
      "name": "comment.line.documentation.terbium",
      "begin": "//[!/](?=[^/])",
      "end": "$"
    },
    "line_comment": {
      "comment": "Single-line comment",
      "name": "comment.line.double-slash.terbium",
      "begin": "//",
      "end": "$"
    },
    "comment": {
      "patterns": [
        {
          "include": "#block_doc_comment"
        },
        {
          "include": "#block_comment"
        },
        {
          "include": "#line_doc_comment"
        },
        {
          "include": "#line_comment"
        }
      ]
    },

    "decimal_literal": {
      "name": "constant.numeric.integer.decimal.terbium",
      "match": "\\b[0-9][0-9_]*u?\\b"
    },
    "hex_literal": {
      "name": "constant.numeric.integer.hexadecimal.terbium",
      "match": "\\b0x[0-9a-fA-F][0-9a-fA-F_]*u?\\b"
    },
    "oct_literal": {
      "name": "constant.numeric.integer.octal.terbium",
      "match": "\\b0o[0-7][0-7_]*u?\\b"
    },
    "bin_literal": {
      "name": "constant.numeric.integer.binary.terbium",
      "match": "\\b0b[01][01_]*u?\\b"
    },
    "int_literal": {
      "patterns": [
        {
          "include": "#hex_literal"
        },
        {
          "include": "#oct_literal"
        },
        {
          "include": "#bin_literal"
        },
        {
          "include": "#decimal_literal"
        }
      ]
    },

    "float_literal": {
      "name": "constant.numeric.float.terbium",
      "match": "\\b(?:[0-9][0-9_]*(?:\\.[0-9][0-9_]*)?[Ee][+-]?[0-9]+|[0-9][0-9_]*\\.[0-9][0-9_]*)\\b"
    },

    "bool_literal": {
      "comment": "Boolean constant",
      "name": "constant.language.boolean.terbium",
      "match": "\\b(true|false)\\b"
    },
    "self": {
      "comment": "Self variable",
      "name": "variable.language.terbium",
      "match": "\\bself\\b"
    },
    "mut": {
      "comment": "Mutable storage modifier",
      "name": "storage.modifier.mut.terbium",
      "match": "\\bmut\\b"
    },
    "kw_control": {
      "comment": "Control keyword",
      "name": "keyword.control.terbium",
      "match": "\\b(break|continue|else|if|for|loop|match|return|while|when)\\b"
    },
    "kw_operator": {
      "comment": "Operator keyword",
      "name": "keyword.operator.terbium",
      "match": "\\b(to|is)\\b"
    },
    "kw_const": {
      "comment": "Const keyword",
      "name": "storage.modifier.const.terbium",
      "match": "\\bconst\\b"
    },
    "kw_static": {
      "comment": "Static keyword",
      "name": "storage.modifier.static.terbium",
      "match": "\\bstatic\\b"
    },
    "primitive_ty": {
      "comment": "Primitive type",
      "name": "storage.type.primitive.terbium",
      "match": "\\b(u?int(?:8|16|32|64|128)?|float(?:32|64|128)?|bool|char|string|void)\\b"
    },
    "reserved": {
      "patterns": [
        {
          "include": "#bool_literal"
        },
        {
          "include": "#self"
        },
        {
          "include": "#mut"
        },
        {
          "include": "#kw_control"
        },
        {
          "include": "#kw_operator"
        },
        {
          "include": "#kw_const"
        },
        {
          "include": "#kw_static"
        },
        {
          "include": "#primitive_ty"
        }
      ]
    },
    "ident": {
      "name": "variable.other.terbium",
      "match": "\\b(?:[a-zA-Z_][a-zA-Z0-9_]*|`[^\\n\\r`]+`)\\b"
    },
    
    "escape_seq": {
      "name": "constant.character.escape.terbium",
      "match": "\\\\(?:[0-7]{1,3}|x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4}|U[0-9a-fA-F]{8}|[abfnrtv'\"?\\\\])"
    },
    "standard_string_literal": {
      "comment": "Double-quote string literal",
      "name": "string.quoted.terbium",
      "begin": "(#*)(['\"])",
      "end": "\\2\\1",
      "patterns": [
        {
          "include": "#escape_seq"
        }
      ]
    },
    "raw_string_literal": {
      "name": "string.quoted.terbium",
      "begin": "\\~(#*)(['\"])",
      "end": "\\2\\1"
    },
    "interpolation": {
      "name": "string.interpolated.terbium",
      "begin": "\\{",
      "beginCaptures": {
        "0": {
          "name": "punctuation.section.embedded.terbium"
        }
      },
      "end": "\\}",
      "endCaptures": {
        "0": {
          "name": "punctuation.section.embedded.terbium"
        }
      },
      "patterns": [
        {
          "include": "#atom"
        }
      ]
    },
    "interpolated_string_literal": {
      "name": "string.quoted.terbium",
      "begin": "\\$(#*)(['\"])",
      "end": "\\2\\1",
      "patterns": [
        {
          "include": "#escape_seq"
        },
        {
          "include": "#interpolation"
        }
      ]
    },
    "interpolated_raw_string_literal": {
      "name": "string.quoted.terbium",
      "begin": "(?:\\~\\$|\\$\\~)(#*)(['\"])",
      "end": "\\2\\1",
      "patterns": [
        {
          "include": "#interpolation"
        }
      ]
    },
    "string_literal": {
      "patterns": [
        {
          "include": "#interpolated_raw_string_literal"
        },
        {
          "include": "#interpolated_string_literal"
        },
        {
          "include": "#raw_string_literal"
        },
        {
          "include": "#standard_string_literal"
        }
      ]
    },

    "char_literal": {
      "name": "constant.character.terbium",
      "match": "c(['\"])(\\\\(?:[0-7]{1,3}|x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4}|U[0-9a-fA-F]{8}|[abfnrtv'\"?\\\\])|.)\\1",
      "captures": {
        "2": {
          "name": "constant.character.escape.terbium"
        }
      }
    },

    "atom": {
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#float_literal"
        },
        {
          "include": "#int_literal"
        },
        {
          "include": "#reserved"
        },
        {
          "include": "#char_literal"
        },
        {
          "include": "#string_literal"
        },
        {
          "include": "#ident"
        }
      ]
    },
    
    "type": {
      "comment": "Type",
      "patterns": [
        {
          "include": "#primitive_ty"
        },
        {
          "include": "#atom"
        }
      ]
    },

    "pat_ident": {
      "comment": "Binding",
      "match": "(mut)?\\s*([a-zA-Z_][a-zA-Z0-9_]*|`[^\\n\\r`]+`)",
      "captures": {
        "1": {
          "name": "keyword.other.mut.terbium"
        },
        "2": {
          "name": "variable.other.terbium"
        }
      }
    },
    "pat_tuple": {
      "comment": "Tuple binding",
      "begin": "\\(",
      "beginCaptures": {
        "0": {
          "name": "punctuation.section.begin.terbium"
        }
      },
      "end": "\\)",
      "endCaptures": {
        "0": {
          "name": "punctuation.section.end.terbium"
        }
      },
      "patterns": [
        {
          "include": "#pat"
        },
        {
          "match": ",",
          "name": "punctuation.separator.terbium"
        }
      ]
    },
    "pat": {
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#pat_ident"
        },
        {
          "include": "#pat_tuple"
        }
      ]
    },

    "pat_ident_func": {
      "comment": "Binding",
      "match": "(mut)?\\s*([a-zA-Z_][a-zA-Z0-9_]*|`[^\\n\\r`]+`)",
      "captures": {
        "1": {
          "name": "keyword.other.mut.terbium"
        },
        "2": {
          "name": "variable.parameter.terbium"
        }
      }
    },
    "pat_tuple_func": {
      "comment": "Tuple binding",
      "begin": "\\(",
      "beginCaptures": {
        "0": {
          "name": "punctuation.section.begin.terbium"
        }
      },
      "end": "\\)",
      "endCaptures": {
        "0": {
          "name": "punctuation.section.end.terbium"
        }
      },
      "patterns": [
        {
          "include": "#pat_func"
        },
        {
          "match": ",",
          "name": "punctuation.separator.terbium"
        }
      ]
    },
    "pat_func": {
      "patterns": [
        {
          "include": "#pat_ident_func"
        },
        {
          "include": "#pat_tuple_func"
        }
      ]
    },

    "func_def": {
      "comment": "Function definition",
      "begin": "\\b(func)\\s+([a-zA-Z_][a-zA-Z0-9_]*|`[^\\n\\r`]+`)",
      "beginCaptures": {
        "1": {
          "name": "keyword.other.func.terbium"
        },
        "2": {
          "name": "entity.name.func.terbium"
        }
      },
      "end": "[\\{;]",
      "patterns": [
        {
          "begin": "\\(",
          "beginCaptures": {
            "0": {
              "name": "punctuation.section.parameters.begin.terbium"
            }
          },
          "end": "\\)",
          "endCaptures": {
            "0": {
              "name": "punctuation.section.parameters.end.terbium"
            }
          },
          "patterns": [
            {
              "include": "#pat_func"
            },
            {
              "match": ",",
              "name": "punctuation.separator.terbium"
            },
            {
              "begin": ":",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.separator.type.terbium"
                }
              },
              "end": "(?=,|\\))",
              "patterns": [
                {
                  "include": "#type"
                }
              ]
            }
          ]
        },
        {
          "include": "#comment"
        },
        {
          "include": "#self"
        },
        {
          "include": "#mut"
        },
        {
          "include": "#atom"
        },
        {
          "include": "#const"
        }
      ]
    }
  }
}